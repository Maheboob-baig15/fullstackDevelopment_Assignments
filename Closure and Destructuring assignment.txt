1).

function createCounter() {
    let count = 0; 

    return function() {
        count++;
        console.log(`Button clicked ${count} times`);
        return count;
    };
}

// Create a counter instance
const counter = createCounter();

// Simulate button clicks
counter(); 
counter();
counter(); 

2).

let order = {
    orderId: "123456",
    productName: "Laptop",
    quantity: 2
};

// Destructuring the properties
const { orderId, productName, quantity } = order;

console.log(`Order ID: ${orderId}`);
console.log(`Product Name: ${productName}`);
console.log(`Quantity: ${quantity}`);

3).

function shoppingCart() {
    // The cart array is encapsulated within the closure
    let cartItems = [];

    // Function to add items to the cart
    function addItem(item) {
        cartItems.push(item);
    }

    // Function to get the current items in the cart
    function getCartItems() {
        return cartItems;
    }

    // Return the object with the method to get cart items
    return {
        addItem: addItem,
        getCartItems: getCartItems
    };
}

const cart = shoppingCart();

// Adding items to the cart
cart.addItem('Apple');
cart.addItem('Banana');
cart.addItem('Orange');


console.log('Cart Items:', cart.getCartItems());

4).

function shoppingCart() {
    // Private variable to store cart items
    const cartItems = [];

   
    function addItem(product) {
        const existingProduct = cartItems.find(item => item.id === product.id);
        if (existingProduct) {
            
            existingProduct.quantity += 1;
        } else {
         
            cartItems.push({ ...product, quantity: 1 });
        }
    }

   
    function getCartItems() {
        return cartItems;
    }

    // Return an object with methods to interact with the cart
    return {
        addItem,
        getCartItems
    };
}

// Example usage
const cart = shoppingCart();

console.log('Cart Items:', cart.getCartItems());
// OUTPUT: Cart Items: []

const product1 = { id: 1, name: 'Product 1', price: 10 };
const product2 = { id: 2, name: 'Product 2', price: 20 };

cart.addItem(product1);
cart.addItem(product2);
cart.addItem(product1);

console.log('Cart Items:', cart.getCartItems());

5).

function shoppingCart() {
   
    const cartItems = [];

  
    function addItem(product) {
        const existingProduct = cartItems.find(item => item.id === product.id);
        if (existingProduct) {
            // If the product already exists, increment the quantity
            existingProduct.quantity += 1;
        } else {
            // Add a new product with an initial quantity of 1
            cartItems.push({ ...product, quantity: 1 });
        }
    }

    
    function removeItem(productId) {
        const productIndex = cartItems.findIndex(item => item.id === productId);
        if (productIndex !== -1) {
            cartItems.splice(productIndex, 1); 
        }
    }

   
    function getCartItems() {
        return cartItems;
    }

    
    return {
        addItem,
        removeItem,
        getCartItems
    };
}


const cart = shoppingCart();

console.log('Cart Items:', cart.getCartItems());
// OUTPUT: Cart Items: []

const product1 = { id: 1, name: 'Product 1', price: 10 };
const product2 = { id: 2, name: 'Product 2', price: 20 };

cart.addItem(product1);
cart.addItem(product2);
cart.addItem(product1);

console.log('Cart Items:', cart.getCartItems());


cart.removeItem(2);

console.log('Cart Items:', cart.getCartItems());

6).

// Task 1: Create a playlist
function createPlaylist(playlistName) {
    const songs = []; // This array is private to the closure

    return {
        addSong: function (songName, artist) {
            songs.push({ songName, artist });
        },
        listSongs: function () {
            const songList = songs.map(song => `${song.songName} by ${song.artist}`).join(", ");
            return `${playlistName} Playlist: ${songList}`;
        }
    };
}

// Example Usage
const myPlaylist = createPlaylist("My Favorites");

// Task 2: Add songs to the playlist
myPlaylist.addSong("Song1", "Artist1");
myPlaylist.addSong("Song2", "Artist2");
myPlaylist.addSong("Song3", "Artist3");

// Task 3: List all songs in the playlist
console.log(myPlaylist.listSongs());

7).




